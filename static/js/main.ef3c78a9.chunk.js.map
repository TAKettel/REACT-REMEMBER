{"version":3,"sources":["components/Wrapper/index.js","components/StickyHeader/index.js","components/CharacterBlock/index.js","components/CharacterCard/index.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Title","score","FriendCard","onClick","checkForDupe","id","alt","name","src","image","App","state","characters","characterArray","indexesArray","_this","includes","console","log","setTimeout","gameover","push","setState","prevState","render","this","i","j","temp","length","Math","floor","random","array","order","key","sort","b","A","B","indexOf","_this2","shuffle","mapOrder","components_Wrapper","style","backStyle","components_StickyHeader","components_CharacterBlock","map","friend","q","components_CharacterCard","Component","ReactDOM","react_router_dom","basename","src_App_0","document","getElementById"],"mappings":"2tEAOeA,MAJf,SAAiBC,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaJ,EAAMK,iBCW5BC,MAZf,SAAeN,GACb,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,yBAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,UACUJ,EAAMO,eCFPD,MALf,SAAeN,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBJ,EAAMK,iBCQhCG,MAVf,SAAoBR,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBK,QAAS,kBAAMT,EAAMU,aAAaV,EAAMW,MACrEV,EAAAC,EAAAC,cAAA,OAAKS,IAAKZ,EAAMa,KAAMC,IAAKd,EAAMe,MAAOX,UAAU,6BC0F3CY,oNAxFbC,MAAQ,CACNC,aACAX,MAAO,KAGTY,eAAiB,KACjBC,aAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,MAInDV,aAAe,SAAAC,GAGTU,EAAKF,eAAeG,SAASX,IAC/BY,QAAQC,IAAI,aACZC,WAAWJ,EAAKK,WAAY,OAG5BL,EAAKF,eAAeQ,KAAKhB,GACzBU,EAAKO,SAAS,SAAAC,GACZ,MAAO,CAAEtB,MAAOsB,EAAUtB,MAAQ,KAEpCgB,QAAQC,IAAIH,EAAKF,gBACjBE,EAAKS,qFAKPC,KAAKZ,eAAiB,GACtBY,KAAKH,SAAS,CAAErB,MAAO,IACvBwB,KAAKD,yCAGCV,GACN,IAAIY,EAAGC,EAAGC,EACV,IAAKF,EAAID,KAAKd,MAAMC,WAAWiB,OAAS,EAAGH,EAAI,EAAGA,IAChDC,EAAIG,KAAKC,MAAMD,KAAKE,UAAYN,EAAI,IACpCE,EAAOH,KAAKX,aAAaY,GACzBD,KAAKX,aAAaY,GAAKD,KAAKX,aAAaa,GACzCF,KAAKX,aAAaa,GAAKC,EAEzB,OAAOd,mCAIAmB,EAAOC,EAAOC,GAYrB,OAXAF,EAAMG,KAAK,SAASxC,EAAGyC,GACrB,IAAIC,EAAI1C,EAAEuC,GACRI,EAAIF,EAAEF,GAER,OAAID,EAAMM,QAAQF,GAAKJ,EAAMM,QAAQD,GAC5B,GAEC,IAILN,mCAGA,IAAAQ,EAAAhB,KAIP,OAFAA,KAAKiB,QAAQjB,KAAKX,cAClBW,KAAKkB,SAAS/B,EAAYa,KAAKX,aAAc,MAE3CnB,EAAAC,EAAAC,cAAC+C,EAAD,CAASC,MAAOpB,KAAKqB,WACnBnD,EAAAC,EAAAC,cAACkD,EAAD,CAAc9C,MAAOwB,KAAKd,MAAMV,QAC/BgB,QAAQC,IAAIO,KAAKd,MAAMV,OACxBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACmD,EAAD,KAGGvB,KAAKd,MAAMC,WAAWqC,IAAI,SAACC,EAAQC,GAAT,OACzBxD,EAAAC,EAAAC,cAACuD,EAAD,CACE/C,GAAI6C,EAAO7C,GACX8B,IAAKe,EAAO7C,GACZE,KAAM2C,EAAO3C,KACbE,MAAOyC,EAAOzC,MACdL,aAAcqC,EAAKrC,2BA/EjBiD,cCFlBC,IAAS9B,OACP7B,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAeC,SAAS,kBACtB7D,EAAAC,EAAAC,cAAC4D,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.ef3c78a9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"container\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./index.css\";\n\nfunction Title(props) {\n  return (\n    <ul className=\"nav nav-tabs navbar-fixed-top\">\n      <li className=\"gameName\">\n        It's all in the mind!\n      </li>\n      <li className=\"scoreArea\">\n        Score: {props.score}\n      </li>\n    </ul>\n  )}\n\nexport default Title;\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nfunction Title(props) {\r\n  return (\r\n    <div className=\"characterBlock row\">{props.children}</div>\r\n  )}\r\n\r\nexport default Title;\r\n","import React from \"react\";\nimport \"./index.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card col-xs-6 col-sm-4 col-md-3\">\n      <div className=\"img-container\" onClick={() => props.checkForDupe(props.id)}>\n        <img alt={props.name} src={props.image} className=\"characterImage\" />\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport StickyHeader from \"./components/StickyHeader\";\nimport CharacterBlock from \"./components/CharacterBlock\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport characters from \"./characters.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    characters,\n    score: 0\n  };\n\n  characterArray = [];\n  indexesArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n  // score = 0;\n\n  checkForDupe = id => {\n    //  i'm calling id and then calling it again inside the forEach, I need to ask if this works, or why it dosen't.\n    //  if the new id is already in the array... game over.\n    if (this.characterArray.includes(id)) {\n      console.log(\"game over\");\n      setTimeout(this.gameover(), 5000);\n    } else {\n      //  ... else add to the array to be checked next time.\n      this.characterArray.push(id);\n      this.setState(prevState => {\n        return { score: prevState.score + 1 };\n      });\n      console.log(this.characterArray);\n      this.render();\n    }\n  };\n\n  gameover() {\n    this.characterArray = [];\n    this.setState({ score: 0 });\n    this.render();\n  }\n\n  shuffle(indexesArray) {\n    var i, j, temp;\n    for (i = this.state.characters.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      temp = this.indexesArray[i];\n      this.indexesArray[i] = this.indexesArray[j];\n      this.indexesArray[j] = temp;\n    }\n    return indexesArray;\n  }\n\n  // https://gist.github.com/ecarter/1423674\n  mapOrder(array, order, key) {\n    array.sort(function(a, b) {\n      var A = a[key],\n        B = b[key];\n\n      if (order.indexOf(A) > order.indexOf(B)) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n\n    return array;\n  }\n\n  render() {\n    // this.shuffle(this.characters);\n    this.shuffle(this.indexesArray);\n    this.mapOrder(characters, this.indexesArray, \"id\");\n    return (\n      <Wrapper style={this.backStyle}>\n        <StickyHeader score={this.state.score} />\n        {console.log(this.state.score)}\n        <div className=\"row\">\n          <CharacterBlock>\n            {/* Randomizing the INDEX of the array elements. Generate an array of indexes, then switch and swap. \n        Not sure that I'm doing this right just yet, or how to get the shuffled index to talk to the mapping. */}\n            {this.state.characters.map((friend, q) => (\n              <CharacterCard\n                id={friend.id}\n                key={friend.id}\n                name={friend.name}\n                image={friend.image}\n                checkForDupe={this.checkForDupe}\n              />\n            ))}\n          </CharacterBlock>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"react-remember\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}